QUE ES UN CAZZO DE VDI??:
VirtualBox Disk Image

A QUE SIRVE UN CAZZO DE VDI???:
Un VirtualBox Disk Image (VDI) es la imagen de un disco duro 
virtual o el disco l√≥gico asociado con una m√°quina virtual.
Se utiliza en entornos de virtualizaci√≥n para crear una r√©plica del espacio en disco asignado a una o m√°s 
m√°quinas virtuales. El VDI captura y almacena toda la informaci√≥n en el disco primario,
generalmente excluyendo los archivos del sistema operativo y la m√°quina virtual.
Esto significa que puedes expandir un archivo de imagen despu√©s de que se haya creado,incluso si ya contiene datos.
Adem√°s, el sistema emula discos duros en formato de imagen de disco VDI, permitiendo que una m√°quina virtual de 
VirtualBox use discos anteriores creados en Microsoft Virtual PC o VMware, as√≠ como su propio formato nativo.

CONTRASEGNA DEL ROOT!!!:
Iamtherealsonic42

DEL USUARIO DMUSOMEC:
Yosoyelsonicreal42

DEL ENCRYPT:
Letmein42

Descripci√≥n breve de todos los tipos de particiones:

‚ó¶ Primaria: La √∫nica partici√≥n en la que puede estar instalada un SO. Solo puede haber 4 particiones primarias 
por disco duro o 3 primarias y una extendida.

‚ó¶ Secundario/Extendida: Fue ideada para romper la limitaci√≥n de 4 particiones primarias en un solo disco f√≠sico.
Solo puede existir una partici√≥n de este tipo por disco, y solo sirve para contener particiones l√≥gicas.

‚ó¶ L√≥gica: Ocupa una porci√≥n de la partici√≥n extendida/primaria o la totalidad de la misma,
la cual se ha formateado con un tipo espec√≠fico de sistema de archivos (en nuestro
caso usaremos ext4) y se le ha asignado una unidad, as√≠ el sistema operativo reconoce las particiones l√≥gicas o 
su sistema de archivos. Puede haber un m√°ximo de 23 particiones l√≥gicas en una partici√≥n extendida, sin embargo, 
Linux, el SO con el que trabajamos actualmente, lo reduce a 15, m√°s que suficientes para realizar este proyecto.

QUE CONCHA ES LVM???:
Un Logical Volume Manager (LVM) es una tecnolog√≠a de gesti√≥n de dispositivos de almacenamiento que proporciona
flexibilidad en la administraci√≥n del espacio de almacenamiento. Utiliza la funci√≥n device-mapper del kernel de
Linux para crear un nivel de abstracci√≥n sobre el almacenamiento f√≠sico, permitiendo la creaci√≥n de vol√∫menes
l√≥gicos que pueden ser m√°s f√°ciles de agrandar o reducir en comparaci√≥n con particiones f√≠sicas tradicionales.
Esto ofrece mayor flexibilidad en la gesti√≥n del espacio de almacenamiento, permitiendo la creaci√≥n de vol√∫menes
l√≥gicos que pueden extenderse a trav√©s de m√∫ltiples discos y no necesariamente requerir espacio contiguo.

POR QUE CONCHA QUERRIA USAR LVM???:
Gestionar con flexibilidad los dispositivos de almacenamiento utilizando un Logical Volume Manager (LVM) ofrece
varios beneficios, incluyendo:

Flexibilidad en la asignaci√≥n de espacio: Permite asignar espacio de almacenamiento de manera din√°mica, seg√∫n
las necesidades del sistema, sin requerir la reorganizaci√≥n f√≠sica de los discos.

Aumento de capacidad: Facilita la adici√≥n de nuevos discos y la expansi√≥n de vol√∫menes l√≥gicos existentes, sin
afectar la disponibilidad del sistema.

Mejora de la tolerancia a fallos: Permite la creaci√≥n de vol√∫menes l√≥gicos que se extienden a trav√©s de m√∫ltiples
discos, lo que reduce el riesgo de p√©rdida de datos en caso de fallo de un disco.

Simplificaci√≥n de la administraci√≥n: Reduce la complejidad en la gesti√≥n de los dispositivos de almacenamiento,
ya que los vol√∫menes l√≥gicos pueden ser gestionados de manera centralizada y sin requerir una profunda
comprensi√≥n de la configuraci√≥n f√≠sica de los discos.

Optimizaci√≥n del rendimiento: Permite la creaci√≥n de vol√∫menes l√≥gicos que se optimizan para el rendimiento,
mediante la distribuci√≥n de los datos en m√∫ltiples discos.

Facilidad de migraci√≥n: Facilita la migraci√≥n de datos entre diferentes sistemas o configuraciones de
almacenamiento, sin requerir la reconfiguraci√≥n de la infraestructura de almacenamiento.

En resumen, la gesti√≥n flexible de los dispositivos de almacenamiento con LVM permite a los administradores de
sistemas optimizar el uso del espacio de almacenamiento, mejorar la tolerancia a fallos y simplificar la
administraci√≥n, lo que a su vez reduce el tiempo de inactividad y mejora la eficiencia general del sistema.

QUE CHUCHAS ES UN DEVICE-MAPPER:
La funci√≥n device-mapper es un componente del kernel de Linux que permite la creaci√≥n de dispositivos de
almacenamiento virtuales, tambi√©n conocidos como ‚Äúdispositivos mapeados‚Äù. Esta funci√≥n act√∫a como una capa de
abstracci√≥n entre los dispositivos de almacenamiento f√≠sicos y los sistemas de archivos, permitiendo la creaci√≥n
de dispositivos virtuales que pueden ser utilizados por el sistema operativo.

La funci√≥n device-mapper proporciona las siguientes caracter√≠sticas:

Mapeo de dispositivos: Permite la creaci√≥n de dispositivos virtuales que se pueden mapear a dispositivos f√≠sicos,
como discos duros, particiones o vol√∫menes l√≥gicos.

Transformaci√≥n de datos: Permite la aplicaci√≥n de transformaciones a los datos que se escriben o leen desde los
dispositivos virtuales, como la cifrado, la compresi√≥n o la verificaci√≥n de integridad.

Gesti√≥n de vol√∫menes: Permite la creaci√≥n y gesti√≥n de vol√∫menes l√≥gicos, que pueden ser utilizados para
almacenar datos y proporcionar una capa de abstracci√≥n adicional sobre los dispositivos de almacenamiento f√≠sicos.

Flexibilidad en la configuraci√≥n: Permite la configuraci√≥n de los dispositivos virtuales y los vol√∫menes l√≥gicos
de manera din√°mica, sin requerir la reinicializaci√≥n del sistema.

En resumen, la funci√≥n device-mapper es un componente fundamental del kernel de Linux que permite la creaci√≥n de
dispositivos de almacenamiento virtuales y la aplicaci√≥n de transformaciones a los datos, lo que proporciona una
mayor flexibilidad y seguridad en la gesti√≥n de los dispositivos de almacenamiento.

PARA QUE CONCHA DIVIDIMOS EN VOLUMENES??:

1. Root (/)
La partici√≥n root es la partici√≥n principal del sistema y contiene el sistema operativo y los archivos de
configuraci√≥n.
Aqu√≠ se almacenan los archivos y directorios que son esenciales para el funcionamiento del sistema, como el
kernel, los drivers, los archivos de configuraci√≥n y los comandos b√°sicos.
La partici√≥n root debe ser lo suficientemente grande como para contener todos los archivos y directorios
necesarios para el sistema.

2. Home (/home)
La partici√≥n home es donde se almacenan los archivos y directorios de los usuarios del sistema.
Cada usuario tiene su propio directorio en /home, donde puede almacenar sus archivos personales, configuraciones
y datos.
La partici√≥n home puede ser una partici√≥n separada para proteger los datos de los usuarios en caso de que el
sistema tenga problemas.

3. Swap (/swap)
La partici√≥n swap es un √°rea de intercambio de memoria que se utiliza cuando el sistema se queda sin memoria RAM.
El sistema utiliza la partici√≥n swap para almacenar temporalmente datos que no se est√°n utilizando en ese
momento, lo que permite liberar memoria RAM para otros procesos.
La partici√≥n swap debe ser lo suficientemente grande como para contener al menos el doble de la cantidad de
memoria RAM del sistema.

4. Tmp (/tmp)
La partici√≥n tmp es un √°rea de almacenamiento temporal donde se almacenan archivos y directorios que se crean y
se eliminan din√°micamente.
Los archivos en /tmp se eliminan autom√°ticamente cuando el sistema se reinicia.
La partici√≥n tmp es √∫til para aplicaciones que necesitan almacenar datos temporalmente, como los archivos de
cach√©.

5. Var (/var)
La partici√≥n var es un √°rea de almacenamiento para archivos y directorios que cambian con frecuencia, como los
archivos de registro, las bases de datos y los archivos de cach√©.
La partici√≥n var es √∫til para aplicaciones que necesitan almacenar datos que cambian con frecuencia, como los
servidores web y los servidores de correo electr√≥nico.

6. Srv (/srv)
La partici√≥n srv es un √°rea de almacenamiento para archivos y directorios que se relacionan con los servicios
del sistema, como los archivos de configuraci√≥n y los datos de los servicios.
La partici√≥n srv es √∫til para aplicaciones que necesitan almacenar datos que se relacionan con los servicios
del sistema, como los servidores de archivos y los servidores de impresi√≥n.

7. Var-log (/var/log)
La partici√≥n var-log es un √°rea de almacenamiento para los archivos de registro del sistema, como los archivos
de sistema, los archivos de seguridad y los archivos de depuraci√≥n.
La partici√≥n var-log es √∫til para aplicaciones que necesitan almacenar archivos de registro, como los servidores
web y los servidores de correo electr√≥nico.

En resumen, cada una de estas divisiones tiene un prop√≥sito espec√≠fico y ayuda a organizar y gestionar los
archivos y directorios del sistema de manera eficiente.

üß† Qu√© es GID‚ùì Es el identificador de grupo, es una abreviatura de Group üÜî.

üß† Qu√© es SSH‚ùì Es el nombre de un protocolo y del programa que lo implementa cuya principal funci√≥n es el acceso remoto a
un servidor por medio de un canal seguro en el que toda la informaci√≥n est√° cifrada.

QUE PINGO ES UFW????:
Uncomplicated Firewall (ufw) es un cortafuegos dise√±ado para ser de f√°cil uso desarrollado por Ubuntu. Utiliza la l√≠nea de
comandos para configurar las iptables usando un peque√±o n√∫mero de comandos simples.

Ufw est√° escrito en python y es un programa para GNU/Linux.

QUE WEA ES UN FIREWALL??????:
En inform√°tica, un cortafuegos (del t√©rmino original en ingl√©s firewall) es la parte de un sistema inform√°tico o una red
inform√°tica que est√° dise√±ada para bloquear el acceso no autorizado, permitiendo al mismo tiempo comunicaciones autorizadas.

QUE MIERDA ES UN IPTABLE???:
iptables es un programa de utilidad de espacio de usuario que permite a un administrador de sistemas configurar el conjunto
de reglas de filtro de paquetes proporcionadas por el n√∫cleo Linux‚Äã (implementado como diferentes m√≥dulos Netfilter). Se
utilizan diferentes m√≥dulos del kernel y programas para protocolos diferentes; iptables se aplica a IPv4, ip6tables a IPv6,
arptables a ARP, y ebtables a marcos de Ethernet.

üß† Qu√© es UFW‚ùì Es un firewall el cual utiliza la l√≠nea de comandos para configurar las iptables usando un peque√±o n√∫mero
de comandos simples.

QUE CONCHA ES PAM???:
Linux PAM, or Pluggable Authentication Modules for Linux, is a suite of libraries that allow a Linux system administrator to
configure methods for authenticating users. It provides a flexible and centralized way to switch authentication methods for
secured applications by using configuration files instead of changing application code. Linux PAM can authenticate users
using various methods such as local passwords, LDAP, or fingerprint readers. It separates authentication tasks into four
independent management groups: account, authentication, password, and session management.

ü§î Que hace cada comando en COMMON-PASSWORD‚ùì

minlen=10 ‚û§ La cantidad m√≠nima de caracteres que debe contener la contrase√±a.

ucredit=-1 ‚û§ Como m√≠nimo debe contener una letra may√∫scula. Ponemos el - ya que debe contener como m√≠nimo un car√°cter,
si ponemos + nos referimos a como m√°ximo esos caracteres.

dcredit=-1 ‚û§ Como m√≠nimo debe contener un d√≠gito.

lcredit=-1 ‚û§ Como m√≠nimo debe contener una letra min√∫scula.

maxrepeat=3 ‚û§ No puede tener m√°s de 3 veces seguidas el mismo car√°cter.

reject_username ‚û§ No puede contener el nombre del usuario.

difok=7 ‚û§ Debe tener al menos 7 caracteres que no sean parte de la antigua contrase√±a.

enforce_for_root ‚û§ Implementaremos esta pol√≠tica para el usuario root.

üß† Qu√© es un script‚ùì Es una secuencia de comandos guardada en un fichero que cuando se ejecuta
har√° la funci√≥n de cada comando.

üß† Qu√© es crontab? Es un administrador de procesos en segundo plano. Los procesos indicados
ser√°n ejecutados en el momento que especifiques en el fichero crontab.

Funcionamiento de cada par√°metro de crontab:

m ‚û§ Corresponde al minuto en que se va a ejecutar el script, el valor va de 0 a 59.

h ‚û§ La hora exacta, se maneja el formato de 24 horas, los valores van de 0 a 23, siendo 0 las 12:00 de la medianoche.
dom ‚û§ hace referencia al d√≠a del mes, por ejemplo se puede especificar 15 si se quiere ejecutar cada d√≠a 15.

dow ‚û§ Significa el d√≠a de la semana, puede ser num√©rico (0 a 7, donde 0 y 7 son domingo) o las 3 primeras letras
del d√≠a en ingl√©s: mon, tue, wed, thu, fri, sat, sun.

user ‚û§ Define el usuario que va a ejecutar el comando, puede ser root, u otro usuario diferente siempre y cuando
tenga permisos de ejecuci√≥n del script.

command ‚û§ Refiere al comando o a la ruta absoluta del script a ejecutar.

Qu√© es una m√°quina virtual‚ùì
Es un software que simula un sistema de computaci√≥n y puede ejecutar programas como si fuese una computadora real.
Permite crear m√∫ltiples entornos simulados o recursos dedicados desde un solo sistema de hardware f√≠sico.

Porque has escogido Debian‚ùì
Esto es algo personal para cada uno, mi opini√≥n: El propio subject explica que es m√°s sencillo hacerlo en Debian y
si buscas documentaci√≥n/tutoriales hay muchos y todos se han hecho en Debian.

Debian vs Rocky Linux
Cuando se compara Debian y Rocky Linux, existen varias diferencias b√°sicas a tener en cuenta:

Compatibilidad con RHEL: Rocky Linux es un clon de Red Hat Enterprise Linux (RHEL) y es binario compatible con RHEL,
lo que significa que los binarios de RHEL funcionan sin problemas en Rocky Linux. Esto puede ser beneficioso para quienes
necesitan una alternativa gratuita a RHEL. Debian, por otro lado, tiene una base de usuarios m√°s amplia y diversa, y no es
binario compatible con RHEL.

Soporte y Comunidad: Debian es un proyecto mantenido por una comunidad de voluntarios y tiene una amplia base de usuarios y
desarrolladores. Esto proporciona un soporte comunitario robusto y documentaci√≥n extensa. Rocky Linux, aunque tambi√©n es un
proyecto comunitario, se ha desarrollado con el objetivo de ser una alternativa a CentOS, que fue discontinuado por Red Hat.
Esto significa que Rocky Linux tiene un enfoque m√°s orientado a las necesidades empresariales y cuenta con el apoyo de
varios sponsors financieramente fuertes.

Seguridad: Rocky Linux integra m√°s estrechamente SELinux, un m√≥dulo de seguridad que proporciona controles de acceso de
seguridad m√°s flexibles y robustos. Debian, por otro lado, utiliza AppArmor como su sistema principal de control de acceso
obligatorio, que es m√°s f√°cil de configurar y gestionar, pero puede ser menos flexible y robusto que SELinux.

Manejo de Paquetes: Rocky Linux utiliza yum y su sucesor dnf, que son potentes, flexibles y f√°ciles de usar, con
caracter√≠sticas como resoluci√≥n autom√°tica de dependencias, versionado y contenido modular. Debian, por otro lado, utiliza
apt, que es confiable y eficiente, pero puede no ofrecer la misma flexibilidad para despliegues de software complejos.

Soporte de Largo Plazo: Rocky Linux ofrece un soporte de largo plazo, regular actualizaciones de seguridad y un ciclo de
lanzamiento predecible, proporcionando estabilidad y confiabilidad para sistemas cr√≠ticos. Debian tambi√©n ofrece soporte de
largo plazo y actualizaciones de seguridad regulares, pero sus versiones LTS (Long Term Support) tienen un ciclo de vida m√°s
largo, lo que puede ser una ventaja para los servidores que requieren estabilidad a largo plazo.

Estas diferencias pueden influir en la elecci√≥n de uno u otro sistema operativo dependiendo de las necesidades espec√≠ficas
del usuario o la organizaci√≥n.

Resumen:
Diferencias b√°sicas entre Rocky y Debian:

Aspecto					Debian					Rocky
Base					Independiente			RHEL
Gestor de Paquetes		APT (.deb)				DNF (.rpm)
Estabilidad				Flexible				Muy estable (empresas)
Soporte					3-5 a√±os				10 a√±os
Uso T√≠pico				General					Servidores empresariales

Rocky es una opci√≥n robusta y empresarial con soporte a largo plazo.
Debian es m√°s vers√°til y comunitario.

Cu√°l es el prop√≥sito de las m√°quinas virtuales‚ùì
Su objetivo es el de proporcionar un entorno de ejecuci√≥n independiente de la plataforma de hardware y del sistema
operativo, que oculte los detalles de la plataforma subyacente y permita que un programa se ejecute siempre de la misma
forma sobre cualquier plataforma.

Diferencias entre apt y aptitude ‚ÜôÔ∏è
Aptitude es una versi√≥n mejorada de apt. APT es un administrador de paquetes de nivel inferior y aptitude es un
administrador de paquetes de alto nivel. Otra gran diferencia es la funcionalidad que ofrecen ambas herramientas. 
Aptitude ofrece una mejor funcionalidad en comparaci√≥n con apt-get. Ambos son capaces de proporcionar los medios necesarios
para realizar la gesti√≥n de paquetes. Sin embargo, si se busca un enfoque con m√°s caracter√≠sticas, deber√≠a ser, Aptitude.

Qu√© es APPArmor‚ùì
Es un m√≥dulo de seguridad del kernel Linux que permite al administrador del sistema restringir lascapacidades de un programa.

Qu√© es LVM‚ùì
Es un gestor de vol√∫menes l√≥gicos. Proporciona un m√©todo para asignar espacio en dispositivos de almacenamiento masivo,
que es m√°s flexible que los esquemas de particionado convencionales para almacenar vol√∫menes.

üß† Qu√© es un script‚ùì Es una secuencia de comandos guardada en un fichero que cuando se ejecuta har√° la funci√≥n de cada comando.

ACORDATE DE ESTA MIERDA:
ls /usr/bin/*session
sudo ufw status
sudo service ufw status
sudo service ssh status
sudo nano /etc/ssh/sshd_config
sudo nano /etc/ssh/ssh_config
uname -a
getent group x
hostname
hostname -I
sudo nano /etc/hostname
sudo nano /etc/hosts
sudo adduser name_user
sudo addgroup evaluating
sudo adduser name_user evaluating
nano /etc/sudoers.d/sudo_config
nano /etc/login.defs
nano /etc/pam.d/common-password
sudo chage -l username
nano /home/user/monitoring.sh
sudo crontab -u root -e
lsblk
dpkg -s sudo
ls /var/log/sudo/
cat /var/log/sudo/sudo_config
dpkg -s ufw
sudo ufw status numbered
sudo ufw allow 8080
sudo ufw delete allow 8080
sudo /etc/init.d/cron stop
sudo /etc/init.d/cron start
